version: '1.0'

services:
  postgres_custom:
    image: postgres:13
    environment:
      POSTGRES_USER: dhkim
      POSTGRES_PASSWORD: dhkim
      POSTGRES_DB: dhkim
      TZ: Asia/Seoul
    volumes:
      - postgres-custom-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      network_custom:
        ipv4_address: 172.28.0.2
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "dhkim"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: 2000daehan@naver.com
      PGADMIN_DEFAULT_PASSWORD: dhkim
      PGADMIN_LISTEN_PORT: 5050
      TZ: Asia/Seoul
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:5050"
    restart: always
    depends_on:
      - postgres_custom
    networks:
      network_custom:

  flask-app:
    image: flask-server
    ports:
      - "3000:8088"
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
      - ${AIRFLOW_PROJ_DIR:-.}/storage:/opt/airflow/storage
      - ${AIRFLOW_PROJ_DIR:-.}/custom_image/flask_server/:/app
    restart: always
    command: python watcher.py
    networks:
      network_custom:
        ipv4_address: 172.28.0.3

  flask-api:
    image: flask-server
    ports:
      - "5000:5000"
    environment:
      FLASK_APP: api.py
      FLASK_ENV: development
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
      - ${AIRFLOW_PROJ_DIR:-.}/storage:/opt/airflow/storage
      - ${AIRFLOW_PROJ_DIR:-.}/custom_image/flask_server/:/app
    restart: always
    command: python -m flask run --host=0.0.0.0 --port=5000
    networks:
      network_custom:
        ipv4_address: 172.28.0.4

volumes:
  postgres-custom-db-volume:
  pgadmin-data:

networks:
  network_custom:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1